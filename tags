!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Board	board.py	/^class Board:$/;"	c
Card	card.py	/^class Card:$/;"	c
Hand	hand.py	/^class Hand:$/;"	c
MAX_PLAYERS	board.py	/^    MAX_PLAYERS = 8$/;"	v	class:Board
NoCardError	exceptions.py	/^class NoCardError(Exception):$/;"	c
NumPlayerError	exceptions.py	/^class NumPlayerError(Exception):$/;"	c
Player	player.py	/^class Player:$/;"	c
STARTING_CARDS	board.py	/^    STARTING_CARDS = 3$/;"	v	class:Board
TimeoutExpiredError	exceptions.py	/^class TimeoutExpiredError(Exception):$/;"	c
__init__	board.py	/^    def __init__(self, players):$/;"	m	class:Board
__init__	card.py	/^    def __init__(self, desc: str, value: float):$/;"	m	class:Card
__init__	hand.py	/^    def __init__(self):$/;"	m	class:Hand
__init__	player.py	/^    def __init__(self, name):$/;"	m	class:Player
__lt__	card.py	/^    def __lt__(self, other_card):$/;"	m	class:Card	file:
board	main.py	/^board = Board(players)$/;"	v
cardReg	sortCards.py	/^cardReg = re.compile(r"^(.*) (\\d.*)$")$/;"	v
cards	hand.py	/^    def cards(self):$/;"	m	class:Hand
desc	card.py	/^    def desc(self):$/;"	m	class:Card
draw_card	board.py	/^    def draw_card(self):$/;"	m	class:Board
end_game	board.py	/^    def end_game(self):$/;"	m	class:Board
f1	sortCards.py	/^f1 = open("card_list", "w")$/;"	v
f1	sortCards.py	/^f1 = open("card_list.txt")$/;"	v
gain_card	hand.py	/^    def gain_card(self, newCard):$/;"	m	class:Hand
game_over_check	board.py	/^    def game_over_check(self, guess_player=None):$/;"	m	class:Board
game_turns	board.py	/^    def game_turns(self):$/;"	m	class:Board
guess_range	player.py	/^    def guess_range(self):$/;"	m	class:Player
hand	player.py	/^    def hand(self):$/;"	m	class:Player
handle_guess	board.py	/^    def handle_guess(self, new_card):$/;"	m	class:Board
initialise_deck	board.py	/^    def initialise_deck(self):$/;"	m	class:Board
initialise_player_cards	board.py	/^    def initialise_player_cards(self):$/;"	m	class:Board
initialise_players	board.py	/^    def initialise_players(self, players):$/;"	m	class:Board
input_with_timeout	player.py	/^def input_with_timeout(prompt, timeout):$/;"	f
mo	sortCards.py	/^    mo = cardReg.search(line) $/;"	v
name	player.py	/^    def name(self):$/;"	m	class:Player
name	player.py	/^    def name(self, new_name):$/;"	m	class:Player
next_guesser	board.py	/^    def next_guesser(self):$/;"	m	class:Board
next_turn	board.py	/^    def next_turn(self):$/;"	m	class:Board
num_cards	hand.py	/^    def num_cards(self):$/;"	m	class:Hand
players	main.py	/^players = [ $/;"	v
print_hand	hand.py	/^    def print_hand(self):$/;"	m	class:Hand
print_next_turn_text	board.py	/^    def print_next_turn_text(self):$/;"	m	class:Board
print_player_cards	board.py	/^    def print_player_cards(self):$/;"	m	class:Board
ranges	hand.py	/^    def ranges(self):$/;"	m	class:Hand
resultList	sortCards.py	/^resultList = list()$/;"	v
testFrontInsert	test_range_insert.py	/^    def testFrontInsert(self):$/;"	m	class:testRangeInsert
testRangeInsert	test_range_insert.py	/^class testRangeInsert(unittest.TestCase):$/;"	c
value	card.py	/^    def value(self):$/;"	m	class:Card
